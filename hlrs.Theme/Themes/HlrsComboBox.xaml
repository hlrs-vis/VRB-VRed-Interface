<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:hlrsTheme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Colors.xaml"/>
        <ResourceDictionary Source="../Assets/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource HighlightBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource SubHighlightBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource SubHighlightBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style TargetType="{x:Type local:HlrsComboBox}">
        <!--<Setter Property="Placeholder" Value="Placeholder"></Setter>-->
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}"/>

        <Setter Property="ValidationBrush" Value="{StaticResource AlertBrush}"/>
        <Setter Property="ValidationText" Value="ValidationText"/>
        <Setter Property="ShowValidationText" Value="False"/>

        <Setter Property="Valid" Value="True"/>
        <Setter Property="ValidateValue" Value="False"/>

        <Setter Property="ShowLabel" Value="False"/>


        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HlrsComboBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Label -->
                        <TextBlock Name="LabelText"  Grid.Row="0" FontSize="16" Margin="10,3"
                                   Text="{TemplateBinding LabelText}"
                                   Foreground="{TemplateBinding Foreground}" 
                                   Visibility="{TemplateBinding ShowLabel, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <!-- END Label -->

                        <!-- ComboBox -->
                        <Grid Grid.Row="1">
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                          ClickMode="Press" Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                              HorizontalAlignment="Left" VerticalAlignment="Center"  
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"           
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Visibility="Hidden" Background="Transparent"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                   Focusable="False" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                            CornerRadius="0" BorderThickness="1,1,1,1" 
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <!-- END ComboBox -->

                        <!-- Validation Text -->
                        <TextBlock Name="ValidationText"  Grid.Row="2" FontSize="12" Margin="10,3"
                                   TextWrapping="Wrap"
                                   Text="{TemplateBinding ValidationText}"
                                   Foreground="{TemplateBinding ValidationBrush}" 
                                   Visibility="{TemplateBinding ShowValidationText, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <!-- END Validation Text -->

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                    <!--<ControlTemplate.Triggers>
                        --><!--<EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="Border" 
                                                     Storyboard.TargetProperty="BorderThickness" 
                                                     From="0,0,0,1" To="0,0,0,1.7" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="PART_ContentHost" 
                                                     Storyboard.TargetProperty="Margin" 
                                                     From="5,0,5,5" To="5,0,5,4.3" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>


                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="Border" 
                                                     Storyboard.TargetProperty="BorderThickness" 
                                                     From="0,0,0,1.7" To="0,0,0,1" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="PART_ContentHost" 
                                                     Storyboard.TargetProperty="Margin" 
                                                     From="5,0,5,4.3" To="5,0,5,5" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->


                        <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderThickness" TargetName="Border" Value="0,0,0,2"></Setter>
                        </Trigger>--><!--
                    </ControlTemplate.Triggers>-->

                </ControlTemplate>
            </Setter.Value>

        </Setter>


    </Style>


</ResourceDictionary>